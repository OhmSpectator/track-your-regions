openapi: 3.1.0
info:
  title: Region Tracking API
  version: 0.0.1

paths:

  # Region endpoints

  # Retrieve root regions (regions without a parent)
  /regions/root:
    get:
      summary: Retrieve all root regions
      parameters:
        - name: hierarchyId
          in: query
          required: false
          description: |
            The hierarchy to retrieve root regions for.
            If not specified, the default hierarchy is used.
          schema:
            type: integer
      responses:
        '200':
          description: List of root regions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
        '400':
          description: Bad request, most likely due to an invalid hierarchy ID

  # Retrieve information about a specific region (root or subregion)
  /regions/{regionId}:
    get:
      summary: Retrieve information about a specific region
      parameters:
        - name: regionId
          in: path
          required: true
          schema:
            type: integer
        - name: hierarchyId
          in: query
          required: false
          description: |
            The hierarchy to which the region belongs.
            If not specified, the default hierarchy is used.
          schema:
            type: integer
      responses:
        '200':
          description: Region information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
        '400':
          description: Bad request
        '404':
          description: Region not found


  # Retrieve subregions for a specific region
  /regions/{regionId}/subregions:
    get:
      summary: Retrieve subregions for a specific region
      parameters:
        - name: regionId
          in: path
          required: true
          schema:
            type: integer
        - name: getAll
          in: query
          required: false
          description: Whether to retrieve all nested subregions or just the immediate subregions.
          schema:
            type: boolean
        - name: hierarchyId
          in: query
          required: false
          description: |
            The hierarchy to which the region belongs.
            If not specified, the default hierarchy is used.
          schema:
            type: integer
      responses:
        '200':
          description: List of subregions
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/Region'
        '204':
          description: Region has no subregions
        '400':
          description: Bad request
        '404':
          description: Region not found

  # Retrieve the parent regions for a specific region
  /regions/{regionId}/ancestors:
    get:
      summary: Retrieve the parent regions for a specific region
      parameters:
        - name: regionId
          in: path
          required: true
          schema:
            type: integer
        - name: hierarchyId
          in: query
          required: false
          description: |
            The hierarchy to which the region belongs.
            If not specified, the default hierarchy is used.
          schema:
            type: integer
      responses:
        '200':
          description: List of parent regions, including the region itself, in order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
        '400':
          description: Bad request
        '404':
          description: Region not found

  /regions/{regionId}/geometry:
    get:
      summary: Retrieve the geometry for a specific region
      parameters:
        - name: regionId
          in: path
          required: true
          schema:
            type: integer
        - name: resolveEmpty
          in: query
          required: false
          description: Whether to resolve empty geometries by aggregating the geometries of the subregions.
          schema:
            type: boolean
        - name: hierarchyId
          in: query
          required: false
          description: |
            The hierarchy to which the region belongs.
            If not specified, the default hierarchy is used.
          schema:
            type: integer
      responses:
        '200':
          description: Geometry of the region, in GeoJSON format, always a MultiPolygon
          content:
            application/json:
              schema:
                type: object
                properties:
                  geometry:
                    $ref: '#/components/schemas/MultiPolygonGeometry'
        '204':
          description: Region has no geometry
        '400':
          description: Bad request
        '404':
          description: Region not found

  # List the available hierarchies
  /regions/hierarchies:
    get:
      summary: List the available hierarchies
      responses:
        '200':
          description: List of available hierarchies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hierarchy'

  # Search for regions by name
  /regions/search:
    get:
      summary: Search for regions by name
      parameters:
        - name: query
          required: true
          in: query
          schema:
            type: string
        - name: hierarchyId
          in: query
          required: false
          description: |
            The hierarchy to search in.
            If not specified, the default hierarchy is used.
          schema:
            type: integer
      responses:
        '200':
          description: List of regions matching the query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
        '204':
          description: No regions match the query
        '400':
          description: Bad request

  /regions/{regionId}/siblings:
    get:
      summary: Retrieve the sibling regions for a specific region
      parameters:
        - name: regionId
          in: path
          required: true
          schema:
            type: integer
        - name: hierarchyId
          in: query
          required: false
          description: |
            The hierarchy to which the region belongs.
            If not specified, the default hierarchy is used.
          schema:
            type: integer
      responses:
        '200':
          description: List of sibling regions, including the region itself
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
        '400':
          description: Bad request
        '404':
          description: Region not found

# Shared components

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
  schemas:
    Region:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        parentRegionId:
          type: integer
        hasSubregions:
          type: boolean

    CRS:
      type: object
      properties:
        type:
          type: string
          enum: [ name ]
          description: Type of CRS; here, 'name' refers to a named CRS.
        properties:
          type: object
          properties:
            name:
              type: string
              description: Name of the CRS used; typically an EPSG code.
              example: "EPSG:4326"

    Coordinate:
      type: array
      minItems: 2
      maxItems: 2
      items:
        type: number
        format: double
      description: A longitude and latitude pair.

    LinearRing:
      type: array
      items:
        $ref: '#/components/schemas/Coordinate'
      description: A closed LineString, with four or more positions. The first and last positions are equivalent (they represent the same point).

    Polygon:
      type: array
      items:
        $ref: '#/components/schemas/LinearRing'
      description: An array of LinearRings where the first element is the outer boundary and any subsequent elements are inner boundaries (holes).

    MultiPolygonGeometry:
      type: object
      properties:
        type:
          type: string
          enum: [ MultiPolygon ]
          description: Type of the geometry; for this API, always 'MultiPolygon'.
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Polygon'
          description: An array of Polygons that make up the MultiPolygon.
        crs:
          $ref: '#/components/schemas/CRS'
        description: A GeoJSON object representing the geometry of the region as a MultiPolygon.

    Hierarchy:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
